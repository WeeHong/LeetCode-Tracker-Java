/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package notiontodoist;

import java.io.IOException;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Optional;
import java.util.Properties;
import java.util.concurrent.TimeoutException;
import notiontodoist.core.Database;
import notiontodoist.core.Notion;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class App {

  private final static Logger logger = LogManager.getLogger(App.class);

  public static void main(String[] args) throws URISyntaxException, IOException,
                                                InterruptedException,
                                                SQLException, TimeoutException {
    Optional<InputStream> inputStream = Optional.ofNullable(
        App.class.getResourceAsStream("/application.properties"));

    if (!inputStream.isPresent()) {
      logger.error("Application properties not found");
      System.exit(-1);
    }

    Properties properties = new Properties();
    properties.load(inputStream.get());

    String notionToken = properties.getProperty("notion.token");
    String notionVersion = properties.getProperty("notion.version");
    String notionDatabase = properties.getProperty("notion.database");
    String todoistToken = properties.getProperty("notion.token");
    String databaseHost = properties.getProperty("database.host");
    String databasePort = properties.getProperty("database.port");
    String databaseName = properties.getProperty("database.name");
    String databaseUser = properties.getProperty("database.user");
    String databasePassword = properties.getProperty("database.password");

    Notion notion = new Notion(notionToken, notionVersion, notionDatabase);

    boolean databaseExist = notion.IsDatabaseExists();

    if (!databaseExist) {
      logger.warn("Notion Database not found");
      System.exit(-1);
    }

    Database database = new Database(databaseHost, databasePort, databaseName,
                                     databaseUser, databasePassword);
    int totalDatabaseRecord = database.CompareTotalQuestions();
    int totalNotionRecord =
        notion.CountTotalRecord(notionToken, notionVersion, notionDatabase);

    if (totalDatabaseRecord != totalNotionRecord) {
      List<HashMap<String, String>> record =
          database.selectQuestions(totalNotionRecord);
      boolean status = notion.createNotionRecord(record);

      if (!status) {
        logger.error("Failed to create notion record");
        System.exit(-1);
      }

      logger.info("Notion record create successfully");
    }
  }
}
